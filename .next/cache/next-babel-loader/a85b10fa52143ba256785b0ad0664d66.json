{"ast":null,"code":"import Bn from \"bignumber.js\";\nimport { compose } from \"ramda\";\nimport { format, fromUnixTime } from \"date-fns\";\nvar timeFormat = \"MMMM do HH:MM:ss\";\n\nvar formatDate = function formatDate(targetFormat) {\n  return function (date) {\n    return format(date, targetFormat);\n  };\n};\n\nvar toMilitaryTime = formatDate(timeFormat);\nvar formatUnixTimestamp = compose(toMilitaryTime, fromUnixTime);\n\nvar shiftBigNumber = function shiftBigNumber(decimals) {\n  return function (bigNumber) {\n    return bigNumber.shiftedBy(decimals);\n  };\n};\n\nvar shiftNumberByEight = shiftBigNumber(-8);\n\nvar toFixedNumber = function toFixedNumber(fixedPoint) {\n  return function (number) {\n    return number.toFixed(fixedPoint);\n  };\n};\n\nvar toTensPlace = toFixedNumber(2);\n\nvar formatBigNumber = function formatBigNumber(x) {\n  return new Bn(x);\n}; // const testNumber = \"39554000000\";\n\n\nvar trace = function trace(label) {\n  return function (val) {\n    console.log(\"\".concat(label, \"::\"), val);\n    return val;\n  };\n};\n\nvar formatBigNumberFn = compose(toTensPlace, shiftNumberByEight, formatBigNumber); //?\n\nvar getLatestTimestamp = function getLatestTimestamp(oracle) {\n  return oracle.methods.latestTimestamp().call({}, function (error, res) {\n    if (error != null) {\n      console.log(error);\n      return;\n    }\n\n    return res;\n  });\n};\n\nexport { formatBigNumberFn, formatUnixTimestamp, getLatestTimestamp };","map":null,"metadata":{},"sourceType":"module"}