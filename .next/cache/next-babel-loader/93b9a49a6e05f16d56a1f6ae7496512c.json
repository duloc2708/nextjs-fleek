{"ast":null,"code":"import Bn from \"bignumber.js\";\nimport { compose } from \"ramda\";\n\nvar shiftBigNumber = function shiftBigNumber(decimals) {\n  return function (bigNumber) {\n    return bigNumber.shiftedBy(decimals);\n  };\n};\n\nvar shiftNumberByEight = shiftBigNumber(-8);\n\nvar toFixedNumber = function toFixedNumber(fixedPoint) {\n  return function (number) {\n    return number.toFixed(fixedPoint);\n  };\n};\n\nvar toTensPlace = toFixedNumber(2);\n\nvar formatBigNumber = function formatBigNumber(x) {\n  return new Bn(x);\n};\n\nvar testNumber = \"39554000000\";\n\nvar trace = function trace(label) {\n  return function (val) {\n    console.log(\"\".concat(label, \"::\"), val);\n    return val;\n  };\n};\n\nvar formatBigNumberFn = compose(toTensPlace, shiftNumberByEight, formatBigNumber); //?\n\nexport { formatBigNumberFn };","map":{"version":3,"sources":["/Users/tgreco/g-drive/fleek-apps/nextjs-fleek/src/shared/utils/index.js"],"names":["Bn","compose","shiftBigNumber","decimals","bigNumber","shiftedBy","shiftNumberByEight","toFixedNumber","fixedPoint","number","toFixed","toTensPlace","formatBigNumber","x","testNumber","trace","label","val","console","log","formatBigNumberFn"],"mappings":"AAAA,OAAOA,EAAP,MAAe,cAAf;AACA,SAASC,OAAT,QAAwB,OAAxB;;AACA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,QAAD;AAAA,SAAc,UAACC,SAAD;AAAA,WACnCA,SAAS,CAACC,SAAV,CAAoBF,QAApB,CADmC;AAAA,GAAd;AAAA,CAAvB;;AAEA,IAAMG,kBAAkB,GAAGJ,cAAc,CAAC,CAAC,CAAF,CAAzC;;AACA,IAAMK,aAAa,GAAG,SAAhBA,aAAgB,CAACC,UAAD;AAAA,SAAgB,UAACC,MAAD;AAAA,WAAYA,MAAM,CAACC,OAAP,CAAeF,UAAf,CAAZ;AAAA,GAAhB;AAAA,CAAtB;;AACA,IAAMG,WAAW,GAAGJ,aAAa,CAAC,CAAD,CAAjC;;AAEA,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAACC,CAAD;AAAA,SAAO,IAAIb,EAAJ,CAAOa,CAAP,CAAP;AAAA,CAAxB;;AAEA,IAAMC,UAAU,GAAG,aAAnB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD;AAAA,SAAW,UAACC,GAAD,EAAS;AAChCC,IAAAA,OAAO,CAACC,GAAR,WAAeH,KAAf,SAA0BC,GAA1B;AACA,WAAOA,GAAP;AACD,GAHa;AAAA,CAAd;;AAKA,IAAMG,iBAAiB,GAAGnB,OAAO,CAC/BU,WAD+B,EAE/BL,kBAF+B,EAG/BM,eAH+B,CAAjC,C,CAIG;;AAEH,SAASQ,iBAAT","sourcesContent":["import Bn from \"bignumber.js\";\nimport { compose } from \"ramda\";\nconst shiftBigNumber = (decimals) => (bigNumber) =>\n  bigNumber.shiftedBy(decimals);\nconst shiftNumberByEight = shiftBigNumber(-8);\nconst toFixedNumber = (fixedPoint) => (number) => number.toFixed(fixedPoint);\nconst toTensPlace = toFixedNumber(2);\n\nconst formatBigNumber = (x) => new Bn(x);\n\nconst testNumber = \"39554000000\";\n\nconst trace = (label) => (val) => {\n  console.log(`${label}::`, val);\n  return val;\n};\n\nconst formatBigNumberFn = compose(\n  toTensPlace,\n  shiftNumberByEight,\n  formatBigNumber\n); //?\n\nexport { formatBigNumberFn };\n"]},"metadata":{},"sourceType":"module"}