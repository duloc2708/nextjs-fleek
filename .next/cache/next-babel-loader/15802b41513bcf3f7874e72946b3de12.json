{"ast":null,"code":"import Web3 from \"web3\";\nimport { CHAINLINK_ORACLE_ABI, ETHEREUM_ORACLE_ADDRESS, DEFAULT_AGGREGATOR_ABI } from \"../abis/mainnet.oracle\";\n\nconst initializeOracle = ({\n  currentChain = process.env.INFURA_MAINNET,\n  oracleAddress = ETHEREUM_ORACLE_ADDRESS,\n  aggregatorAbi = DEFAULT_AGGREGATOR_ABI\n}) => {\n  const web3 = new Web3(new Web3.providers.HttpProvider(`${currentChain}${process.env.infuraID}`));\n  const oracle = new web3.eth.Contract(CHAINLINK_ORACLE_ABI, oracleAddress);\n\n  const getLatestData = () => {\n    oracle.methods.latestAnswer().call({}, (error, res) => {\n      if (error != null) {\n        console.log(error);\n        return;\n      }\n\n      console.log(\"Latest price was:\", res);\n      return res;\n    });\n  };\n\n  const getLatestTimestamp = () => {\n    oracle.methods.latestTimestamp().call({}, (error, res) => {\n      if (error != null) {\n        console.log(error);\n        return;\n      }\n\n      console.log(\"Latest timestamp for price was:\", res);\n      return res;\n    });\n  };\n\n  return {\n    oracle,\n    getLatestData,\n    getLatestTimestamp\n  };\n};\n\nexport default initializeOracle;","map":{"version":3,"sources":["/Users/tgreco/g-drive/fleek-apps/nextjs-fleek/src/shared/hooks/useInfura.js"],"names":["Web3","CHAINLINK_ORACLE_ABI","ETHEREUM_ORACLE_ADDRESS","DEFAULT_AGGREGATOR_ABI","initializeOracle","currentChain","process","env","INFURA_MAINNET","oracleAddress","aggregatorAbi","web3","providers","HttpProvider","infuraID","oracle","eth","Contract","getLatestData","methods","latestAnswer","call","error","res","console","log","getLatestTimestamp","latestTimestamp"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,SACEC,oBADF,EAEEC,uBAFF,EAGEC,sBAHF,QAIO,wBAJP;;AAMA,MAAMC,gBAAgB,GAAG,CAAC;AACxBC,EAAAA,YAAY,GAAGC,OAAO,CAACC,GAAR,CAAYC,cADH;AAExBC,EAAAA,aAAa,GAAGP,uBAFQ;AAGxBQ,EAAAA,aAAa,GAAGP;AAHQ,CAAD,KAInB;AACJ,QAAMQ,IAAI,GAAG,IAAIX,IAAJ,CACX,IAAIA,IAAI,CAACY,SAAL,CAAeC,YAAnB,CAAiC,GAAER,YAAa,GAAEC,OAAO,CAACC,GAAR,CAAYO,QAAS,EAAvE,CADW,CAAb;AAIA,QAAMC,MAAM,GAAG,IAAIJ,IAAI,CAACK,GAAL,CAASC,QAAb,CAAsBhB,oBAAtB,EAA4CQ,aAA5C,CAAf;;AACA,QAAMS,aAAa,GAAG,MAAM;AAC1BH,IAAAA,MAAM,CAACI,OAAP,CAAeC,YAAf,GAA8BC,IAA9B,CAAmC,EAAnC,EAAuC,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACrD,UAAID,KAAK,IAAI,IAAb,EAAmB;AACjBE,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA;AACD;;AACDE,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,GAAjC;AACA,aAAOA,GAAP;AACD,KAPD;AAQD,GATD;;AAWA,QAAMG,kBAAkB,GAAG,MAAM;AAC/BX,IAAAA,MAAM,CAACI,OAAP,CAAeQ,eAAf,GAAiCN,IAAjC,CAAsC,EAAtC,EAA0C,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACxD,UAAID,KAAK,IAAI,IAAb,EAAmB;AACjBE,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA;AACD;;AACDE,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CF,GAA/C;AACA,aAAOA,GAAP;AACD,KAPD;AAQD,GATD;;AAUA,SAAO;AACLR,IAAAA,MADK;AAELG,IAAAA,aAFK;AAGLQ,IAAAA;AAHK,GAAP;AAKD,CApCD;;AAsCA,eAAetB,gBAAf","sourcesContent":["import Web3 from \"web3\";\nimport {\n  CHAINLINK_ORACLE_ABI,\n  ETHEREUM_ORACLE_ADDRESS,\n  DEFAULT_AGGREGATOR_ABI,\n} from \"../abis/mainnet.oracle\";\n\nconst initializeOracle = ({\n  currentChain = process.env.INFURA_MAINNET,\n  oracleAddress = ETHEREUM_ORACLE_ADDRESS,\n  aggregatorAbi = DEFAULT_AGGREGATOR_ABI,\n}) => {\n  const web3 = new Web3(\n    new Web3.providers.HttpProvider(`${currentChain}${process.env.infuraID}`)\n  );\n\n  const oracle = new web3.eth.Contract(CHAINLINK_ORACLE_ABI, oracleAddress);\n  const getLatestData = () => {\n    oracle.methods.latestAnswer().call({}, (error, res) => {\n      if (error != null) {\n        console.log(error);\n        return;\n      }\n      console.log(\"Latest price was:\", res);\n      return res;\n    });\n  };\n\n  const getLatestTimestamp = () => {\n    oracle.methods.latestTimestamp().call({}, (error, res) => {\n      if (error != null) {\n        console.log(error);\n        return;\n      }\n      console.log(\"Latest timestamp for price was:\", res);\n      return res;\n    });\n  };\n  return {\n    oracle,\n    getLatestData,\n    getLatestTimestamp,\n  };\n};\n\nexport default initializeOracle;\n"]},"metadata":{},"sourceType":"module"}