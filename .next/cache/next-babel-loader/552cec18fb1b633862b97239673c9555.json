{"ast":null,"code":"var _jsxFileName = \"/Users/tgreco/g-drive/fleek-apps/nextjs-fleek/src/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useEffect, useState } from \"react\";\nimport { string } from \"prop-types\";\nimport useInfura from \"../shared/hooks/useInfura\";\nimport LatestPrice from \"../features/EthereumData/component\";\nimport { ETHEREUM_ORACLE_ADDRESS, LINK_ORACLE_ADDRESS } from \"../shared/abis/mainnet.oracle\";\nimport Wrapper from \"../shared/layout/component\";\nimport { formatBigNumberFn, formatUnixTimestamp, getLatestTimestamp } from \"../shared/utils/index\";\n\nconst Index = ({\n  title = \"NextJS IPFS Application\"\n}) => {\n  const {\n    oracle\n  } = useInfura({\n    currentChain: process.env.INFURA_MAINNET,\n    oracleAddress: ETHEREUM_ORACLE_ADDRESS\n  });\n  const {\n    oracle: linkOracle\n  } = useInfura({\n    currentChain: process.env.INFURA_MAINNET,\n    oracleAddress: LINK_ORACLE_ADDRESS\n  });\n  const {\n    0: ethPriceData,\n    1: setEthPriceData\n  } = useState(\"\");\n  const {\n    0: linkPriceData,\n    1: setLinkPriceData\n  } = useState(\"\");\n\n  const updateLink = () => {\n    linkOracle.methods.latestAnswer().call({}, (error, res) => {\n      if (error != null) {\n        console.log(error);\n        return;\n      }\n\n      setLinkPriceData(x => _objectSpread(_objectSpread({}, x), {}, {\n        price: formatBigNumberFn(res)\n      }));\n    });\n  };\n\n  const updateData = () => {\n    oracle.methods.latestAnswer().call({}, (error, res) => {\n      if (error != null) {\n        console.log(error);\n        return;\n      }\n\n      setEthPriceData(x => _objectSpread(_objectSpread({}, x), {}, {\n        price: formatBigNumberFn(res)\n      }));\n    });\n  };\n\n  useEffect(() => {\n    getLatestTimestamp(linkOracle).then(res => {\n      setLinkPriceData(x => _objectSpread(_objectSpread({}, x), {}, {\n        lastUpdate: formatUnixTimestamp(res)\n      }));\n    });\n  }, [linkPriceData.price]);\n  useEffect(() => {\n    getLatestTimestamp(oracle).then(res => {\n      setEthPriceData(x => _objectSpread(_objectSpread({}, x), {}, {\n        lastUpdate: formatUnixTimestamp(res)\n      }));\n    });\n  }, [ethPriceData.price]);\n  useEffect(() => {\n    updateData();\n    updateLink();\n  }, []);\n  return __jsx(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, title), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"Price Data\"), __jsx(LatestPrice, {\n    coin: \"ETH\",\n    lastUpdated: ethPriceData.lastUpdate,\n    price: ethPriceData.price,\n    onClick: updateData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }), __jsx(LatestPrice, {\n    coin: \"Link\",\n    lastUpdated: linkPriceData.lastUpdate,\n    price: linkPriceData.price,\n    onClick: updateLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, \"About the application\"), __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, \"This application is using\", \" \", __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    href: \"https://chain.link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"Chain.link\"), \" \", \"to fetch pricing data from decentralized oracles and it is hosted using IPFS.\"), __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, \" \", \"Learn more about Chainlink Price Feeds:\", \" \", __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    href: \"https://docs.chain.link/docs/using-chainlink-reference-contracts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, \"Chainlink Docs\")), __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, \" \", \"Learn more about IPFS:\", \" \", __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    href: \"https://ipfs.io\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, \"IPFS.io\")));\n};\n\nIndex.propTypes = {\n  title: string\n};\nexport default Index;","map":{"version":3,"sources":["/Users/tgreco/g-drive/fleek-apps/nextjs-fleek/src/pages/index.js"],"names":["useEffect","useState","string","useInfura","LatestPrice","ETHEREUM_ORACLE_ADDRESS","LINK_ORACLE_ADDRESS","Wrapper","formatBigNumberFn","formatUnixTimestamp","getLatestTimestamp","Index","title","oracle","currentChain","process","env","INFURA_MAINNET","oracleAddress","linkOracle","ethPriceData","setEthPriceData","linkPriceData","setLinkPriceData","updateLink","methods","latestAnswer","call","error","res","console","log","x","price","updateData","then","lastUpdate","textAlign","propTypes"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { string } from \"prop-types\";\nimport useInfura from \"../shared/hooks/useInfura\";\nimport LatestPrice from \"../features/EthereumData/component\";\nimport {\n  ETHEREUM_ORACLE_ADDRESS,\n  LINK_ORACLE_ADDRESS,\n} from \"../shared/abis/mainnet.oracle\";\nimport Wrapper from \"../shared/layout/component\";\nimport {\n  formatBigNumberFn,\n  formatUnixTimestamp,\n  getLatestTimestamp,\n} from \"../shared/utils/index\";\n\nconst Index = ({ title = \"NextJS IPFS Application\" }) => {\n  const { oracle } = useInfura({\n    currentChain: process.env.INFURA_MAINNET,\n    oracleAddress: ETHEREUM_ORACLE_ADDRESS,\n  });\n\n  const { oracle: linkOracle } = useInfura({\n    currentChain: process.env.INFURA_MAINNET,\n    oracleAddress: LINK_ORACLE_ADDRESS,\n  });\n\n  const [ethPriceData, setEthPriceData] = useState(\"\");\n  const [linkPriceData, setLinkPriceData] = useState(\"\");\n\n  const updateLink = () => {\n    linkOracle.methods.latestAnswer().call({}, (error, res) => {\n      if (error != null) {\n        console.log(error);\n        return;\n      }\n      setLinkPriceData((x) => ({\n        ...x,\n        price: formatBigNumberFn(res),\n      }));\n    });\n  };\n\n  const updateData = () => {\n    oracle.methods.latestAnswer().call({}, (error, res) => {\n      if (error != null) {\n        console.log(error);\n        return;\n      }\n      setEthPriceData((x) => ({\n        ...x,\n        price: formatBigNumberFn(res),\n      }));\n    });\n  };\n\n  useEffect(() => {\n    getLatestTimestamp(linkOracle).then((res) => {\n      setLinkPriceData((x) => ({\n        ...x,\n        lastUpdate: formatUnixTimestamp(res),\n      }));\n    });\n  }, [linkPriceData.price]);\n\n  useEffect(() => {\n    getLatestTimestamp(oracle).then((res) => {\n      setEthPriceData((x) => ({\n        ...x,\n        lastUpdate: formatUnixTimestamp(res),\n      }));\n    });\n  }, [ethPriceData.price]);\n\n  useEffect(() => {\n    updateData();\n    updateLink();\n  }, []);\n  return (\n    <Wrapper>\n      <h1 style={{ textAlign: \"center\" }}>{title}</h1>\n      <h2>Price Data</h2>\n      <LatestPrice\n        coin=\"ETH\"\n        lastUpdated={ethPriceData.lastUpdate}\n        price={ethPriceData.price}\n        onClick={updateData}\n      />\n      <LatestPrice\n        coin=\"Link\"\n        lastUpdated={linkPriceData.lastUpdate}\n        price={linkPriceData.price}\n        onClick={updateLink}\n      />\n      <h2>About the application</h2>\n      <h3>\n        This application is using{\" \"}\n        <a target=\"_blank\" rel=\"noreferrer\" href=\"https://chain.link\">\n          Chain.link\n        </a>{\" \"}\n        to fetch pricing data from decentralized oracles and it is hosted using\n        IPFS.\n      </h3>\n      <h4>\n        {\" \"}\n        Learn more about Chainlink Price Feeds:{\" \"}\n        <a\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          href=\"https://docs.chain.link/docs/using-chainlink-reference-contracts\"\n        >\n          Chainlink Docs\n        </a>\n      </h4>\n      <h4>\n        {\" \"}\n        Learn more about IPFS:{\" \"}\n        <a target=\"_blank\" rel=\"noreferrer\" href=\"https://ipfs.io\">\n          IPFS.io\n        </a>\n      </h4>\n    </Wrapper>\n  );\n};\n\nIndex.propTypes = {\n  title: string,\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}