{"ast":null,"code":"var _jsxFileName = \"/Users/tgreco/g-drive/fleek-apps/nextjs-fleek/src/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useEffect, useState } from \"react\";\nimport { string } from \"prop-types\";\nimport useInfura from \"../shared/hooks/useInfura\";\nimport LatestPrice from \"../features/EthereumData/component\";\nimport BigNumber from \"bignumber.js\";\nimport { ETHEREUM_ORACLE_ADDRESS, LINK_ORACLE_ADDRESS } from \"../shared/abis/ropsten.oracle\";\nimport Wrapper from \"../shared/layout/component\";\nimport { format, fromUnixTime } from \"date-fns\";\nconst timeFormat = \"LLLL do HH:MM:ss\";\n\nconst getLatestTimestamp = oracle => {\n  oracle.methods.latestTimestamp().call({}, (error, res) => {\n    if (error != null) {\n      console.log(error);\n      return;\n    }\n\n    console.log(\"Latest timestamp for price was:\", res);\n    return res;\n  });\n};\n\nconst formatBigInt = number => new BigNumber(number).shiftedBy(-8).toFixed(2);\n\nconst initialPriceData = {\n  price: \"\",\n  lastUpdated: \"\"\n};\n\nconst Index = ({\n  title = \"NextJS IPFS Application\"\n}) => {\n  const {\n    oracle\n  } = useInfura({\n    currentChain: process.env.INFURA_ROPSTEN,\n    oracleAddress: ETHEREUM_ORACLE_ADDRESS\n  });\n  const {\n    oracle: linkOracle\n  } = useInfura({\n    currentChain: process.env.INFURA_ROPSTEN,\n    oracleAddress: LINK_ORACLE_ADDRESS\n  });\n  const {\n    0: ethPriceData,\n    1: setEthPriceData\n  } = useState(\"\");\n  const {\n    0: linkPriceData,\n    1: setLinkPriceData\n  } = useState(\"\");\n\n  const updateLink = () => {\n    const {\n      methods\n    } = linkOracle;\n    linkOracle.methods.latestAnswer().call({}, (error, res) => {\n      if (error != null) {\n        console.log(error);\n        return;\n      }\n\n      setLinkPriceData({\n        price: formatBigInt(res)\n      });\n    });\n    linkOracle.methods.latestTimestamp().call({}, (error, res) => {\n      if (error != null) {\n        console.log(error);\n        return;\n      }\n\n      console.log({\n        timestamp: res\n      });\n      setLinkPriceData(_objectSpread(_objectSpread({}, linkPriceData), {}, {\n        lastUpdated: format(fromUnixTime(res), timeFormat)\n      }));\n    });\n  };\n\n  const updateData = () => {\n    oracle.methods.latestAnswer().call({}, (error, res) => {\n      if (error != null) {\n        console.log(error);\n        return;\n      }\n\n      setEthPriceData({\n        price: formatBigInt(res)\n      });\n    });\n    oracle.methods.latestTimestamp().call({}, (error, res) => {\n      if (error != null) {\n        console.log(error);\n        return;\n      }\n\n      console.log({\n        timestamp: res\n      });\n      setEthPriceData(_objectSpread(_objectSpread({}, ethPriceData), {}, {\n        lastUpdated: format(fromUnixTime(res), timeFormat)\n      }));\n    });\n  };\n\n  useEffect(() => {\n    updateData();\n    updateLink();\n  }, []);\n  console.log({\n    linkPriceData,\n    ethPriceData\n  });\n  return __jsx(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, title), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, \"Using\", \" \", __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    href: \"https://chain.link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"Chain.link\"), \" \", \"for pricing data below.\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, \" \", \"Learn more about Chainlink Price Feeds:\", \" \", __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    href: \"https://docs.chain.link/docs/using-chainlink-reference-contracts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, \"Chainlink Docs\")), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, \" \", \"Learn more about IPFS:\", \" \", __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    href: \"https://ipfs.io\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, \"IPFS.io\")), __jsx(LatestPrice, {\n    coin: \"ETH\",\n    price: ethPriceData.price,\n    updatedAtTime: ethPriceData.lastUpdated,\n    onClick: updateData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }), __jsx(LatestPrice, {\n    coin: \"Link\",\n    price: linkPriceData.price,\n    updatedAtTime: linkPriceData.lastUpdated,\n    onClick: updateLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }));\n};\n\nIndex.propTypes = {\n  title: string\n};\nexport default Index;","map":{"version":3,"sources":["/Users/tgreco/g-drive/fleek-apps/nextjs-fleek/src/pages/index.js"],"names":["useEffect","useState","string","useInfura","LatestPrice","BigNumber","ETHEREUM_ORACLE_ADDRESS","LINK_ORACLE_ADDRESS","Wrapper","format","fromUnixTime","timeFormat","getLatestTimestamp","oracle","methods","latestTimestamp","call","error","res","console","log","formatBigInt","number","shiftedBy","toFixed","initialPriceData","price","lastUpdated","Index","title","currentChain","process","env","INFURA_ROPSTEN","oracleAddress","linkOracle","ethPriceData","setEthPriceData","linkPriceData","setLinkPriceData","updateLink","latestAnswer","timestamp","updateData","propTypes"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { string } from \"prop-types\";\nimport useInfura from \"../shared/hooks/useInfura\";\nimport LatestPrice from \"../features/EthereumData/component\";\nimport BigNumber from \"bignumber.js\";\nimport {\n  ETHEREUM_ORACLE_ADDRESS,\n  LINK_ORACLE_ADDRESS,\n} from \"../shared/abis/ropsten.oracle\";\nimport Wrapper from \"../shared/layout/component\";\nimport { format, fromUnixTime } from \"date-fns\";\nconst timeFormat = \"LLLL do HH:MM:ss\";\nconst getLatestTimestamp = (oracle) => {\n  oracle.methods.latestTimestamp().call({}, (error, res) => {\n    if (error != null) {\n      console.log(error);\n      return;\n    }\n    console.log(\"Latest timestamp for price was:\", res);\n    return res;\n  });\n};\nconst formatBigInt = (number) => new BigNumber(number).shiftedBy(-8).toFixed(2);\nconst initialPriceData = { price: \"\", lastUpdated: \"\" };\nconst Index = ({ title = \"NextJS IPFS Application\" }) => {\n  const { oracle } = useInfura({\n    currentChain: process.env.INFURA_ROPSTEN,\n    oracleAddress: ETHEREUM_ORACLE_ADDRESS,\n  });\n\n  const { oracle: linkOracle } = useInfura({\n    currentChain: process.env.INFURA_ROPSTEN,\n    oracleAddress: LINK_ORACLE_ADDRESS,\n  });\n\n  const [ethPriceData, setEthPriceData] = useState(\"\");\n  const [linkPriceData, setLinkPriceData] = useState(\"\");\n\n  const updateLink = () => {\n    const { methods } = linkOracle;\n    linkOracle.methods.latestAnswer().call({}, (error, res) => {\n      if (error != null) {\n        console.log(error);\n        return;\n      }\n      setLinkPriceData({ price: formatBigInt(res) });\n    });\n    linkOracle.methods.latestTimestamp().call({}, (error, res) => {\n      if (error != null) {\n        console.log(error);\n        return;\n      }\n      console.log({ timestamp: res });\n      setLinkPriceData({\n        ...linkPriceData,\n        lastUpdated: format(fromUnixTime(res), timeFormat),\n      });\n    });\n  };\n\n  const updateData = () => {\n    oracle.methods.latestAnswer().call({}, (error, res) => {\n      if (error != null) {\n        console.log(error);\n        return;\n      }\n      setEthPriceData({ price: formatBigInt(res) });\n    });\n    oracle.methods.latestTimestamp().call({}, (error, res) => {\n      if (error != null) {\n        console.log(error);\n        return;\n      }\n      console.log({ timestamp: res });\n      setEthPriceData({\n        ...ethPriceData,\n        lastUpdated: format(fromUnixTime(res), timeFormat),\n      });\n    });\n  };\n\n  useEffect(() => {\n    updateData();\n    updateLink();\n  }, []);\n\n  console.log({ linkPriceData, ethPriceData });\n  return (\n    <Wrapper>\n      <h2>{title}</h2>\n      <p>\n        Using{\" \"}\n        <a target=\"_blank\" rel=\"noreferrer\" href=\"https://chain.link\">\n          Chain.link\n        </a>{\" \"}\n        for pricing data below.\n      </p>\n      <p>\n        {\" \"}\n        Learn more about Chainlink Price Feeds:{\" \"}\n        <a\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          href=\"https://docs.chain.link/docs/using-chainlink-reference-contracts\"\n        >\n          Chainlink Docs\n        </a>\n      </p>\n      <p>\n        {\" \"}\n        Learn more about IPFS:{\" \"}\n        <a target=\"_blank\" rel=\"noreferrer\" href=\"https://ipfs.io\">\n          IPFS.io\n        </a>\n      </p>\n      <LatestPrice\n        coin=\"ETH\"\n        price={ethPriceData.price}\n        updatedAtTime={ethPriceData.lastUpdated}\n        onClick={updateData}\n      />\n      <LatestPrice\n        coin=\"Link\"\n        price={linkPriceData.price}\n        updatedAtTime={linkPriceData.lastUpdated}\n        onClick={updateLink}\n      />\n    </Wrapper>\n  );\n};\n\nIndex.propTypes = {\n  title: string,\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}