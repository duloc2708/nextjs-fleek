{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/tgreco/g-drive/fleek-apps/nextjs-fleek/src/pages/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from \"react\";\nimport useInfura from \"../shared/hooks/useInfura\";\nimport BigNumber from \"bignumber.js\";\n\nvar fromDecimal = function fromDecimal(decimal) {\n  return function (number) {\n    return new BigNumber(number).shiftedBy(decimal);\n  };\n};\n\nvar fromEth = fromDecimal(-18);\n\nvar formatNumber = function formatNumber(x) {\n  return new BigNumber(x).toFixed(2);\n};\n\nvar Index = function Index(_ref) {\n  _s();\n\n  var _ref$title = _ref.title,\n      title = _ref$title === void 0 ? \"NextJS IPFS Application\" : _ref$title;\n\n  var _useInfura = useInfura(),\n      oracle = _useInfura.oracle,\n      getLatestData = _useInfura.getLatestData;\n\n  var _useState = useState(\"\"),\n      priceData = _useState[0],\n      setPriceData = _useState[1];\n\n  console.log({\n    oracle: oracle\n  });\n  useEffect(function () {\n    oracle.methods.latestAnswer().call({}, function (error, res) {\n      if (error != null) {\n        console.log(error);\n        return;\n      }\n\n      console.log(\"Latest price was:\", res);\n      setPriceData(new BigNumber(res).shiftedBy(-18).fixed(2));\n    });\n  }, []);\n  console.log({\n    priceData: priceData\n  });\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, title));\n};\n\n_s(Index, \"Ex4xy+2sU+ZNfFtuvze8CABIJVA=\", false, function () {\n  return [useInfura];\n});\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/tgreco/g-drive/fleek-apps/nextjs-fleek/src/pages/index.js"],"names":["useEffect","useState","useInfura","BigNumber","fromDecimal","decimal","number","shiftedBy","fromEth","formatNumber","x","toFixed","Index","title","oracle","getLatestData","priceData","setPriceData","console","log","methods","latestAnswer","call","error","res","fixed"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,SAAP,MAAsB,cAAtB;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,OAAD;AAAA,SAAa,UAACC,MAAD;AAAA,WAC/B,IAAIH,SAAJ,CAAcG,MAAd,EAAsBC,SAAtB,CAAgCF,OAAhC,CAD+B;AAAA,GAAb;AAAA,CAApB;;AAEA,IAAMG,OAAO,GAAGJ,WAAW,CAAC,CAAC,EAAF,CAA3B;;AAEA,IAAMK,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD;AAAA,SAAO,IAAIP,SAAJ,CAAcO,CAAd,EAAiBC,OAAjB,CAAyB,CAAzB,CAAP;AAAA,CAArB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAA2C;AAAA;;AAAA,wBAAxCC,KAAwC;AAAA,MAAxCA,KAAwC,2BAAhC,yBAAgC;;AAAA,mBACrBX,SAAS,EADY;AAAA,MAC/CY,MAD+C,cAC/CA,MAD+C;AAAA,MACvCC,aADuC,cACvCA,aADuC;;AAAA,kBAErBd,QAAQ,CAAC,EAAD,CAFa;AAAA,MAEhDe,SAFgD;AAAA,MAErCC,YAFqC;;AAIvDC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEL,IAAAA,MAAM,EAANA;AAAF,GAAZ;AACAd,EAAAA,SAAS,CAAC,YAAM;AACdc,IAAAA,MAAM,CAACM,OAAP,CAAeC,YAAf,GAA8BC,IAA9B,CAAmC,EAAnC,EAAuC,UAACC,KAAD,EAAQC,GAAR,EAAgB;AACrD,UAAID,KAAK,IAAI,IAAb,EAAmB;AACjBL,QAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACA;AACD;;AACDL,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCK,GAAjC;AACAP,MAAAA,YAAY,CAAC,IAAId,SAAJ,CAAcqB,GAAd,EAAmBjB,SAAnB,CAA6B,CAAC,EAA9B,EAAkCkB,KAAlC,CAAwC,CAAxC,CAAD,CAAZ;AACD,KAPD;AAQD,GATQ,EASN,EATM,CAAT;AAUAP,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEH,IAAAA,SAAS,EAATA;AAAF,GAAZ;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,KAAL,CADF,CADF;AAKD,CArBD;;GAAMD,K;UAC8BV,S;;;KAD9BU,K;AAuBN,eAAeA,KAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport useInfura from \"../shared/hooks/useInfura\";\nimport BigNumber from \"bignumber.js\";\nconst fromDecimal = (decimal) => (number) =>\n  new BigNumber(number).shiftedBy(decimal);\nconst fromEth = fromDecimal(-18);\n\nconst formatNumber = (x) => new BigNumber(x).toFixed(2);\n\nconst Index = ({ title = \"NextJS IPFS Application\" }) => {\n  const { oracle, getLatestData } = useInfura();\n  const [priceData, setPriceData] = useState(\"\");\n\n  console.log({ oracle });\n  useEffect(() => {\n    oracle.methods.latestAnswer().call({}, (error, res) => {\n      if (error != null) {\n        console.log(error);\n        return;\n      }\n      console.log(\"Latest price was:\", res);\n      setPriceData(new BigNumber(res).shiftedBy(-18).fixed(2));\n    });\n  }, []);\n  console.log({ priceData });\n  return (\n    <div>\n      <h2>{title}</h2>\n    </div>\n  );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}