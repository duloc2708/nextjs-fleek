{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/tgreco/g-drive/fleek-apps/nextjs-fleek/src/pages/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from \"react\";\nimport useInfura from \"../shared/hooks/useInfura\";\nimport LatestPrice from \"../features/EthereumData/component\";\nimport BigNumber from \"bignumber.js\";\nimport { ETHEREUM_ORACLE_ADDRESS, LINK_ORACLE_ADDRESS } from \"../shared/abis/ropsten.oracle\";\n\nvar fromDecimal = function fromDecimal(decimal) {\n  return function (number) {\n    return new BigNumber(number).shiftedBy(decimal);\n  };\n};\n\nvar fromEth = fromDecimal(-18);\n\nvar formatNumber = function formatNumber(x) {\n  return new BigNumber(x).toFixed(2);\n};\n\nvar Index = function Index(_ref) {\n  _s();\n\n  var _ref$title = _ref.title,\n      title = _ref$title === void 0 ? \"NextJS IPFS Application\" : _ref$title;\n\n  var _useInfura = useInfura({\n    currentChain: process.env.INFURA_ROPSTEN,\n    oracleAddress: ETHEREUM_ORACLE_ADDRESS\n  }),\n      oracle = _useInfura.oracle;\n\n  var _useInfura2 = useInfura({\n    currentChain: process.env.INFURA_ROPSTEN,\n    oracleAddress: ETHEREUM_ORACLE_ADDRESS\n  }),\n      linkOracle = _useInfura2.oracle;\n\n  var _useState = useState(\"\"),\n      priceData = _useState[0],\n      setPriceData = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      linkPriceData = _useState2[0],\n      setLinkPriceData = _useState2[1];\n\n  var updateLink = function updateLink() {\n    linkOracle.methods.latestAnswer().call({}, function (error, res) {\n      if (error != null) {\n        console.log(error);\n        return;\n      }\n\n      console.log(\"Latest price was:\", res);\n      setLinkPriceData(new BigNumber(res).shiftedBy(-8).toFixed(2));\n    });\n  };\n\n  var updateData = function updateData() {\n    oracle.methods.latestAnswer().call({}, function (error, res) {\n      if (error != null) {\n        console.log(error);\n        return;\n      }\n\n      console.log(\"Latest price was:\", res);\n      setPriceData(new BigNumber(res).shiftedBy(-8).toFixed(2));\n    });\n  };\n\n  console.log({\n    oracle: oracle\n  });\n  useEffect(function () {\n    updateData();\n    updateLink();\n  }, []);\n  console.log({\n    priceData: priceData\n  });\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, title), __jsx(LatestPrice, {\n    coin: \"ETH\",\n    price: priceData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), __jsx(\"button\", {\n    onClick: updateData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Update Price\"), __jsx(LatestPrice, {\n    coin: \"Link\",\n    price: linkPriceData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), __jsx(\"button\", {\n    onClick: updateLink,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"Update LINK Price\"));\n};\n\n_s(Index, \"DcL7e4SBVz9Wxe/pIh3EeINvkeE=\", false, function () {\n  return [useInfura, useInfura];\n});\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/tgreco/g-drive/fleek-apps/nextjs-fleek/src/pages/index.js"],"names":["useEffect","useState","useInfura","LatestPrice","BigNumber","ETHEREUM_ORACLE_ADDRESS","LINK_ORACLE_ADDRESS","fromDecimal","decimal","number","shiftedBy","fromEth","formatNumber","x","toFixed","Index","title","currentChain","process","env","INFURA_ROPSTEN","oracleAddress","oracle","linkOracle","priceData","setPriceData","linkPriceData","setLinkPriceData","updateLink","methods","latestAnswer","call","error","res","console","log","updateData"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport useInfura from \"../shared/hooks/useInfura\";\nimport LatestPrice from \"../features/EthereumData/component\";\nimport BigNumber from \"bignumber.js\";\nimport {\n  ETHEREUM_ORACLE_ADDRESS,\n  LINK_ORACLE_ADDRESS,\n} from \"../shared/abis/ropsten.oracle\";\nconst fromDecimal = (decimal) => (number) =>\n  new BigNumber(number).shiftedBy(decimal);\nconst fromEth = fromDecimal(-18);\n\nconst formatNumber = (x) => new BigNumber(x).toFixed(2);\n\nconst Index = ({ title = \"NextJS IPFS Application\" }) => {\n  const { oracle } = useInfura({\n    currentChain: process.env.INFURA_ROPSTEN,\n    oracleAddress: ETHEREUM_ORACLE_ADDRESS,\n  });\n\n  const { oracle: linkOracle } = useInfura({\n    currentChain: process.env.INFURA_ROPSTEN,\n    oracleAddress: ETHEREUM_ORACLE_ADDRESS,\n  });\n\n  const [priceData, setPriceData] = useState(\"\");\n  const [linkPriceData, setLinkPriceData] = useState(\"\");\n\n  const updateLink = () => {\n    linkOracle.methods.latestAnswer().call({}, (error, res) => {\n      if (error != null) {\n        console.log(error);\n        return;\n      }\n      console.log(\"Latest price was:\", res);\n      setLinkPriceData(new BigNumber(res).shiftedBy(-8).toFixed(2));\n    });\n  };\n\n  const updateData = () => {\n    oracle.methods.latestAnswer().call({}, (error, res) => {\n      if (error != null) {\n        console.log(error);\n        return;\n      }\n      console.log(\"Latest price was:\", res);\n      setPriceData(new BigNumber(res).shiftedBy(-8).toFixed(2));\n    });\n  };\n\n  console.log({ oracle });\n  useEffect(() => {\n    updateData();\n    updateLink();\n  }, []);\n  console.log({ priceData });\n  return (\n    <div>\n      <h2>{title}</h2>\n      <LatestPrice coin=\"ETH\" price={priceData} />\n      <button onClick={updateData}>Update Price</button>\n\n      <LatestPrice coin=\"Link\" price={linkPriceData} />\n      <button onClick={updateLink}>Update LINK Price</button>\n    </div>\n  );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}