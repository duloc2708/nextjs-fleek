{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect, useState } from \"react\";\nimport useInfura from \"../shared/hooks/useInfura\";\nimport LatestPrice from \"../features/EthereumData/component\";\nimport { ETHEREUM_ORACLE_ADDRESS, LINK_ORACLE_ADDRESS } from \"../shared/abis/mainnet.oracle\";\nimport Wrapper from \"../shared/layout/component\";\nimport { formatBigNumberFn, formatUnixTimestamp, getLatestTimestamp } from \"../shared/utils/index\";\n\nvar Index = function Index(_ref) {\n  var _ref$title = _ref.title,\n      title = _ref$title === void 0 ? \"NextJS IPFS Application\" : _ref$title;\n\n  var _useInfura = useInfura({\n    currentChain: process.env.INFURA_MAINNET,\n    oracleAddress: ETHEREUM_ORACLE_ADDRESS\n  }),\n      oracle = _useInfura.oracle;\n\n  var _useInfura2 = useInfura({\n    currentChain: process.env.INFURA_MAINNET,\n    oracleAddress: LINK_ORACLE_ADDRESS\n  }),\n      linkOracle = _useInfura2.oracle;\n\n  var _useState = useState(\"\"),\n      ethPriceData = _useState[0],\n      setEthPriceData = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      linkPriceData = _useState2[0],\n      setLinkPriceData = _useState2[1];\n\n  var updateLink = function updateLink() {\n    linkOracle.methods.latestAnswer().call({}, function (error, res) {\n      if (error != null) {\n        console.log(error);\n        return;\n      }\n\n      setLinkPriceData(function (x) {\n        return _objectSpread(_objectSpread({}, x), {}, {\n          price: formatBigNumberFn(res)\n        });\n      });\n    });\n  };\n\n  var updateData = function updateData() {\n    oracle.methods.latestAnswer().call({}, function (error, res) {\n      if (error != null) {\n        console.log(error);\n        return;\n      }\n\n      setEthPriceData(function (x) {\n        return _objectSpread(_objectSpread({}, x), {}, {\n          price: formatBigNumberFn(res)\n        });\n      });\n    });\n  };\n\n  useEffect(function () {\n    getLatestTimestamp(linkOracle).then(function (res) {\n      setLinkPriceData(function (x) {\n        return _objectSpread(_objectSpread({}, x), {}, {\n          lastUpdate: formatUnixTimestamp(res)\n        });\n      });\n    });\n  }, [linkPriceData.price]);\n  useEffect(function () {\n    getLatestTimestamp(oracle).then(function (res) {\n      setEthPriceData(function (x) {\n        return _objectSpread(_objectSpread({}, x), {}, {\n          lastUpdate: formatUnixTimestamp(res)\n        });\n      });\n    });\n  }, [ethPriceData.price]);\n  useEffect(function () {\n    updateData();\n    updateLink();\n  }, []);\n  return __jsx(Wrapper, null, __jsx(\"h1\", {\n    style: {\n      textAlign: \"center\"\n    }\n  }, title), __jsx(\"h2\", null, \"Price Data\"), __jsx(LatestPrice, {\n    coin: \"ETH\",\n    lastUpdated: ethPriceData.lastUpdate,\n    price: ethPriceData.price,\n    onClick: updateData\n  }), __jsx(LatestPrice, {\n    coin: \"Link\",\n    lastUpdated: linkPriceData.lastUpdate,\n    price: linkPriceData.price,\n    onClick: updateLink\n  }), __jsx(\"h2\", null, \"About the application\"), __jsx(\"h3\", null, \"This application is using\", \" \", __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    href: \"https://chain.link\"\n  }, \"Chain.link\"), \" \", \"to fetch pricing data from decentralized oracles and it is hosted using IPFS.\"), __jsx(\"h4\", null, \" \", \"Learn more about Chainlink Price Feeds:\", \" \", __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    href: \"https://docs.chain.link/docs/using-chainlink-reference-contracts\"\n  }, \"Chainlink Docs\")), __jsx(\"h4\", null, \" \", \"Learn more about IPFS:\", \" \", __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    href: \"https://ipfs.io\"\n  }, \"IPFS.io\")));\n};\n\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}