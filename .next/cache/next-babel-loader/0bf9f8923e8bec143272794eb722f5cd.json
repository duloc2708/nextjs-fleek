{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/tgreco/g-drive/fleek-apps/nextjs-fleek/src/pages/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from \"react\";\nimport { string } from \"prop-types\";\nimport useInfura from \"../shared/hooks/useInfura\";\nimport LatestPrice from \"../features/EthereumData/component\";\nimport BigNumber from \"bignumber.js\";\nimport { ETHEREUM_ORACLE_ADDRESS, LINK_ORACLE_ADDRESS } from \"../shared/abis/ropsten.oracle\";\nimport Wrapper from \"../shared/layout/component\";\n\nvar getLatestTimestamp = function getLatestTimestamp(oracle) {\n  oracle.methods.latestTimestamp().call({}, function (error, res) {\n    if (error != null) {\n      console.log(error);\n      return;\n    }\n\n    console.log(\"Latest timestamp for price was:\", res);\n    return res;\n  });\n};\n\nvar Index = function Index(_ref) {\n  _s();\n\n  var _ref$title = _ref.title,\n      title = _ref$title === void 0 ? \"NextJS IPFS Application\" : _ref$title;\n\n  var _useInfura = useInfura({\n    currentChain: process.env.INFURA_ROPSTEN,\n    oracleAddress: ETHEREUM_ORACLE_ADDRESS\n  }),\n      oracle = _useInfura.oracle;\n\n  var _useInfura2 = useInfura({\n    currentChain: process.env.INFURA_ROPSTEN,\n    oracleAddress: LINK_ORACLE_ADDRESS\n  }),\n      linkOracle = _useInfura2.oracle;\n\n  var _useState = useState(\"\"),\n      priceData = _useState[0],\n      setPriceData = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      linkPriceData = _useState2[0],\n      setLinkPriceData = _useState2[1];\n\n  var updateLink = function updateLink() {\n    linkOracle.methods.latestAnswer().call({}, function (error, res) {\n      if (error != null) {\n        console.log(error);\n        return;\n      }\n\n      setLinkPriceData(new BigNumber(res).shiftedBy(-8).toFixed(2));\n    });\n  };\n\n  var updateData = function updateData() {\n    oracle.methods.latestAnswer().call({}, function (error, res) {\n      if (error != null) {\n        console.log(error);\n        return;\n      }\n\n      setPriceData(new BigNumber(res).shiftedBy(-8).toFixed(2));\n    });\n  };\n\n  useEffect(function () {\n    var getLatestTimestamp = function getLatestTimestamp() {\n      oracle.methods.latestTimestamp().call({}, function (error, res) {\n        if (error != null) {\n          console.log(error);\n          return;\n        }\n\n        console.log(\"Latest timestamp for price was:\", res);\n        return res;\n      });\n    };\n\n    getLatestTimestamp();\n  }, [priceData]);\n  useEffect(function () {\n    updateData();\n    updateLink();\n  }, []);\n  return __jsx(Wrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, title), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, \"Using\", \" \", __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    href: \"https://chain.link\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"Chain.link\"), \" \", \"for pricing data below.\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, \" \", \"Learn more about Chainlink Price Feeds:\", \" \", __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    href: \"https://docs.chain.link/docs/using-chainlink-reference-contracts\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \"Chainlink Docs\")), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, \" \", \"Learn more about IPFS:\", \" \", __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    href: \"https://ipfs.io\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"IPFS.io\")), __jsx(LatestPrice, {\n    coin: \"ETH\",\n    price: priceData,\n    onClick: updateData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }), __jsx(LatestPrice, {\n    coin: \"Link\",\n    price: linkPriceData,\n    onClick: updateLink,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(Index, \"Wcn5pKoKKHkef0q1YB5MbglxFxA=\", false, function () {\n  return [useInfura, useInfura];\n});\n\n_c = Index;\nIndex.propTypes = {\n  title: string\n};\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/tgreco/g-drive/fleek-apps/nextjs-fleek/src/pages/index.js"],"names":["useEffect","useState","string","useInfura","LatestPrice","BigNumber","ETHEREUM_ORACLE_ADDRESS","LINK_ORACLE_ADDRESS","Wrapper","getLatestTimestamp","oracle","methods","latestTimestamp","call","error","res","console","log","Index","title","currentChain","process","env","INFURA_ROPSTEN","oracleAddress","linkOracle","priceData","setPriceData","linkPriceData","setLinkPriceData","updateLink","latestAnswer","shiftedBy","toFixed","updateData","propTypes"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { string } from \"prop-types\";\nimport useInfura from \"../shared/hooks/useInfura\";\nimport LatestPrice from \"../features/EthereumData/component\";\nimport BigNumber from \"bignumber.js\";\nimport {\n  ETHEREUM_ORACLE_ADDRESS,\n  LINK_ORACLE_ADDRESS,\n} from \"../shared/abis/ropsten.oracle\";\nimport Wrapper from \"../shared/layout/component\";\nconst getLatestTimestamp = (oracle) => {\n  oracle.methods.latestTimestamp().call({}, (error, res) => {\n    if (error != null) {\n      console.log(error);\n      return;\n    }\n    console.log(\"Latest timestamp for price was:\", res);\n    return res;\n  });\n};\nconst Index = ({ title = \"NextJS IPFS Application\" }) => {\n  const { oracle } = useInfura({\n    currentChain: process.env.INFURA_ROPSTEN,\n    oracleAddress: ETHEREUM_ORACLE_ADDRESS,\n  });\n\n  const { oracle: linkOracle } = useInfura({\n    currentChain: process.env.INFURA_ROPSTEN,\n    oracleAddress: LINK_ORACLE_ADDRESS,\n  });\n\n  const [priceData, setPriceData] = useState(\"\");\n  const [linkPriceData, setLinkPriceData] = useState(\"\");\n\n  const updateLink = () => {\n    linkOracle.methods.latestAnswer().call({}, (error, res) => {\n      if (error != null) {\n        console.log(error);\n        return;\n      }\n      setLinkPriceData(new BigNumber(res).shiftedBy(-8).toFixed(2));\n    });\n  };\n\n  const updateData = () => {\n    oracle.methods.latestAnswer().call({}, (error, res) => {\n      if (error != null) {\n        console.log(error);\n        return;\n      }\n      setPriceData(new BigNumber(res).shiftedBy(-8).toFixed(2));\n    });\n  };\n\n  useEffect(() => {\n    const getLatestTimestamp = () => {\n      oracle.methods.latestTimestamp().call({}, (error, res) => {\n        if (error != null) {\n          console.log(error);\n          return;\n        }\n        console.log(\"Latest timestamp for price was:\", res);\n        return res;\n      });\n    };\n    getLatestTimestamp();\n  }, [priceData]);\n\n  useEffect(() => {\n    updateData();\n    updateLink();\n  }, []);\n  return (\n    <Wrapper>\n      <h2>{title}</h2>\n      <p>\n        Using{\" \"}\n        <a target=\"_blank\" rel=\"noreferrer\" href=\"https://chain.link\">\n          Chain.link\n        </a>{\" \"}\n        for pricing data below.\n      </p>\n      <p>\n        {\" \"}\n        Learn more about Chainlink Price Feeds:{\" \"}\n        <a\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          href=\"https://docs.chain.link/docs/using-chainlink-reference-contracts\"\n        >\n          Chainlink Docs\n        </a>\n      </p>\n      <p>\n        {\" \"}\n        Learn more about IPFS:{\" \"}\n        <a target=\"_blank\" rel=\"noreferrer\" href=\"https://ipfs.io\">\n          IPFS.io\n        </a>\n      </p>\n      <LatestPrice coin=\"ETH\" price={priceData} onClick={updateData} />\n      <LatestPrice coin=\"Link\" price={linkPriceData} onClick={updateLink} />\n    </Wrapper>\n  );\n};\n\nIndex.propTypes = {\n  title: string,\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}