{"ast":null,"code":"var _jsxFileName = \"/Users/tgreco/g-drive/fleek-apps/nextjs-fleek/src/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from \"react\";\nimport useInfura from \"../shared/hooks/useInfura\";\nimport LatestPrice from \"../features/EthereumData/component\";\nimport BigNumber from \"bignumber.js\";\n\nconst fromDecimal = decimal => number => new BigNumber(number).shiftedBy(decimal);\n\nconst fromEth = fromDecimal(-18);\n\nconst formatNumber = x => new BigNumber(x).toFixed(2);\n\nconst Index = ({\n  title = \"NextJS IPFS Application\"\n}) => {\n  const {\n    oracle,\n    getLatestData\n  } = useInfura();\n  const {\n    0: priceData,\n    1: setPriceData\n  } = useState(\"\");\n\n  const updateData = () => {\n    const latest = getLatestData();\n    setPriceData(new BigNumber(latest).shiftedBy(-8).toFixed(2));\n  };\n\n  console.log({\n    oracle\n  });\n  useEffect(() => {\n    oracle.methods.latestAnswer().call({}, (error, res) => {\n      if (error != null) {\n        console.log(error);\n        return;\n      }\n\n      console.log(\"Latest price was:\", res);\n      setPriceData(new BigNumber(res).shiftedBy(-8).toFixed(2));\n    });\n  }, []);\n  console.log({\n    priceData\n  });\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, title), __jsx(LatestPrice, {\n    price: priceData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/tgreco/g-drive/fleek-apps/nextjs-fleek/src/pages/index.js"],"names":["useEffect","useState","useInfura","LatestPrice","BigNumber","fromDecimal","decimal","number","shiftedBy","fromEth","formatNumber","x","toFixed","Index","title","oracle","getLatestData","priceData","setPriceData","updateData","latest","console","log","methods","latestAnswer","call","error","res"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AACA,OAAOC,SAAP,MAAsB,cAAtB;;AACA,MAAMC,WAAW,GAAIC,OAAD,IAAcC,MAAD,IAC/B,IAAIH,SAAJ,CAAcG,MAAd,EAAsBC,SAAtB,CAAgCF,OAAhC,CADF;;AAEA,MAAMG,OAAO,GAAGJ,WAAW,CAAC,CAAC,EAAF,CAA3B;;AAEA,MAAMK,YAAY,GAAIC,CAAD,IAAO,IAAIP,SAAJ,CAAcO,CAAd,EAAiBC,OAAjB,CAAyB,CAAzB,CAA5B;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAK,GAAG;AAAV,CAAD,KAA2C;AACvD,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAA4Bd,SAAS,EAA3C;AACA,QAAM;AAAA,OAACe,SAAD;AAAA,OAAYC;AAAZ,MAA4BjB,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMkB,UAAU,GAAG,MAAM;AACvB,UAAMC,MAAM,GAAGJ,aAAa,EAA5B;AACAE,IAAAA,YAAY,CAAC,IAAId,SAAJ,CAAcgB,MAAd,EAAsBZ,SAAtB,CAAgC,CAAC,CAAjC,EAAoCI,OAApC,CAA4C,CAA5C,CAAD,CAAZ;AACD,GAHD;;AAKAS,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEP,IAAAA;AAAF,GAAZ;AACAf,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,MAAM,CAACQ,OAAP,CAAeC,YAAf,GAA8BC,IAA9B,CAAmC,EAAnC,EAAuC,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACrD,UAAID,KAAK,IAAI,IAAb,EAAmB;AACjBL,QAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACA;AACD;;AACDL,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCK,GAAjC;AACAT,MAAAA,YAAY,CAAC,IAAId,SAAJ,CAAcuB,GAAd,EAAmBnB,SAAnB,CAA6B,CAAC,CAA9B,EAAiCI,OAAjC,CAAyC,CAAzC,CAAD,CAAZ;AACD,KAPD;AAQD,GATQ,EASN,EATM,CAAT;AAUAS,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEL,IAAAA;AAAF,GAAZ;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,KAAL,CADF,EAEE,MAAC,WAAD;AAAa,IAAA,KAAK,EAAEG,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CA3BD;;AA6BA,eAAeJ,KAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport useInfura from \"../shared/hooks/useInfura\";\nimport LatestPrice from \"../features/EthereumData/component\";\nimport BigNumber from \"bignumber.js\";\nconst fromDecimal = (decimal) => (number) =>\n  new BigNumber(number).shiftedBy(decimal);\nconst fromEth = fromDecimal(-18);\n\nconst formatNumber = (x) => new BigNumber(x).toFixed(2);\n\nconst Index = ({ title = \"NextJS IPFS Application\" }) => {\n  const { oracle, getLatestData } = useInfura();\n  const [priceData, setPriceData] = useState(\"\");\n\n  const updateData = () => {\n    const latest = getLatestData();\n    setPriceData(new BigNumber(latest).shiftedBy(-8).toFixed(2));\n  };\n\n  console.log({ oracle });\n  useEffect(() => {\n    oracle.methods.latestAnswer().call({}, (error, res) => {\n      if (error != null) {\n        console.log(error);\n        return;\n      }\n      console.log(\"Latest price was:\", res);\n      setPriceData(new BigNumber(res).shiftedBy(-8).toFixed(2));\n    });\n  }, []);\n  console.log({ priceData });\n  return (\n    <div>\n      <h2>{title}</h2>\n      <LatestPrice price={priceData} />\n    </div>\n  );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}