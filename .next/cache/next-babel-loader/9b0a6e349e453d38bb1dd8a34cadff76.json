{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/tgreco/g-drive/fleek-apps/nextjs-fleek/src/pages/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from \"react\";\nimport useInfura from \"../shared/hooks/useInfura\";\nimport LatestPrice from \"../features/EthereumData/component\";\nimport BigNumber from \"bignumber.js\";\nimport { ETHEREUM_ORACLE_ADDRESS, LINK_ORACLE_ADDRESS } from \"../shared/abis/ropsten.oracle\";\n\nvar fromDecimal = function fromDecimal(decimal) {\n  return function (number) {\n    return new BigNumber(number).shiftedBy(decimal);\n  };\n};\n\nvar fromEth = fromDecimal(-18);\n\nvar formatNumber = function formatNumber(x) {\n  return new BigNumber(x).toFixed(2);\n};\n\nvar getOracleData = function getOracleData(oracle) {\n  return function () {\n    oracle.methods.latestAnswer().call({}, function (error, res) {\n      if (error != null) {\n        console.log(error);\n        return;\n      }\n\n      console.log(\"Latest price was:\", res);\n      return BigNumber(res).shiftedBy(-8).toFixed(2);\n    });\n  };\n};\n\nvar Index = function Index(_ref) {\n  _s();\n\n  var _ref$title = _ref.title,\n      title = _ref$title === void 0 ? \"NextJS IPFS Application\" : _ref$title;\n\n  var _useInfura = useInfura({\n    currentChain: process.env.INFURA_ROPSTEN,\n    oracleAddress: ETHEREUM_ORACLE_ADDRESS\n  }),\n      oracle = _useInfura.oracle,\n      getLatestData = _useInfura.getLatestData;\n\n  var _useState = useState(\"\"),\n      priceData = _useState[0],\n      setPriceData = _useState[1];\n\n  var updateData = function updateData() {\n    setPriceData(getOracleData(oracle)());\n  };\n\n  console.log({\n    oracle: oracle\n  });\n  useEffect(function () {\n    updateData();\n  }, []);\n  console.log({\n    priceData: priceData\n  });\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, title), __jsx(LatestPrice, {\n    coin: \"ETH\",\n    price: priceData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), __jsx(\"button\", {\n    onClick: updateData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Update Price\"));\n};\n\n_s(Index, \"Ex4xy+2sU+ZNfFtuvze8CABIJVA=\", false, function () {\n  return [useInfura];\n});\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/tgreco/g-drive/fleek-apps/nextjs-fleek/src/pages/index.js"],"names":["useEffect","useState","useInfura","LatestPrice","BigNumber","ETHEREUM_ORACLE_ADDRESS","LINK_ORACLE_ADDRESS","fromDecimal","decimal","number","shiftedBy","fromEth","formatNumber","x","toFixed","getOracleData","oracle","methods","latestAnswer","call","error","res","console","log","Index","title","currentChain","process","env","INFURA_ROPSTEN","oracleAddress","getLatestData","priceData","setPriceData","updateData"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SACEC,uBADF,EAEEC,mBAFF,QAGO,+BAHP;;AAIA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,OAAD;AAAA,SAAa,UAACC,MAAD;AAAA,WAC/B,IAAIL,SAAJ,CAAcK,MAAd,EAAsBC,SAAtB,CAAgCF,OAAhC,CAD+B;AAAA,GAAb;AAAA,CAApB;;AAEA,IAAMG,OAAO,GAAGJ,WAAW,CAAC,CAAC,EAAF,CAA3B;;AAEA,IAAMK,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD;AAAA,SAAO,IAAIT,SAAJ,CAAcS,CAAd,EAAiBC,OAAjB,CAAyB,CAAzB,CAAP;AAAA,CAArB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,MAAD;AAAA,SAAY,YAAM;AACtCA,IAAAA,MAAM,CAACC,OAAP,CAAeC,YAAf,GAA8BC,IAA9B,CAAmC,EAAnC,EAAuC,UAACC,KAAD,EAAQC,GAAR,EAAgB;AACrD,UAAID,KAAK,IAAI,IAAb,EAAmB;AACjBE,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA;AACD;;AACDE,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,GAAjC;AACA,aAAOjB,SAAS,CAACiB,GAAD,CAAT,CAAeX,SAAf,CAAyB,CAAC,CAA1B,EAA6BI,OAA7B,CAAqC,CAArC,CAAP;AACD,KAPD;AAQD,GATqB;AAAA,CAAtB;;AAWA,IAAMU,KAAK,GAAG,SAARA,KAAQ,OAA2C;AAAA;;AAAA,wBAAxCC,KAAwC;AAAA,MAAxCA,KAAwC,2BAAhC,yBAAgC;;AAAA,mBACrBvB,SAAS,CAAC;AAC1CwB,IAAAA,YAAY,EAAEC,OAAO,CAACC,GAAR,CAAYC,cADgB;AAE1CC,IAAAA,aAAa,EAAEzB;AAF2B,GAAD,CADY;AAAA,MAC/CW,MAD+C,cAC/CA,MAD+C;AAAA,MACvCe,aADuC,cACvCA,aADuC;;AAAA,kBAMrB9B,QAAQ,CAAC,EAAD,CANa;AAAA,MAMhD+B,SANgD;AAAA,MAMrCC,YANqC;;AAQvD,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBD,IAAAA,YAAY,CAAClB,aAAa,CAACC,MAAD,CAAb,EAAD,CAAZ;AACD,GAFD;;AAIAM,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEP,IAAAA,MAAM,EAANA;AAAF,GAAZ;AACAhB,EAAAA,SAAS,CAAC,YAAM;AACdkC,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;AAIAZ,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAES,IAAAA,SAAS,EAATA;AAAF,GAAZ;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKP,KAAL,CADF,EAEE,MAAC,WAAD;AAAa,IAAA,IAAI,EAAC,KAAlB;AAAwB,IAAA,KAAK,EAAEO,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAQ,IAAA,OAAO,EAAEE,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,CADF;AAOD,CAzBD;;GAAMV,K;UAC8BtB,S;;;KAD9BsB,K;AA2BN,eAAeA,KAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport useInfura from \"../shared/hooks/useInfura\";\nimport LatestPrice from \"../features/EthereumData/component\";\nimport BigNumber from \"bignumber.js\";\nimport {\n  ETHEREUM_ORACLE_ADDRESS,\n  LINK_ORACLE_ADDRESS,\n} from \"../shared/abis/ropsten.oracle\";\nconst fromDecimal = (decimal) => (number) =>\n  new BigNumber(number).shiftedBy(decimal);\nconst fromEth = fromDecimal(-18);\n\nconst formatNumber = (x) => new BigNumber(x).toFixed(2);\n\nconst getOracleData = (oracle) => () => {\n  oracle.methods.latestAnswer().call({}, (error, res) => {\n    if (error != null) {\n      console.log(error);\n      return;\n    }\n    console.log(\"Latest price was:\", res);\n    return BigNumber(res).shiftedBy(-8).toFixed(2);\n  });\n};\n\nconst Index = ({ title = \"NextJS IPFS Application\" }) => {\n  const { oracle, getLatestData } = useInfura({\n    currentChain: process.env.INFURA_ROPSTEN,\n    oracleAddress: ETHEREUM_ORACLE_ADDRESS,\n  });\n\n  const [priceData, setPriceData] = useState(\"\");\n\n  const updateData = () => {\n    setPriceData(getOracleData(oracle)());\n  };\n\n  console.log({ oracle });\n  useEffect(() => {\n    updateData();\n  }, []);\n\n  console.log({ priceData });\n  return (\n    <div>\n      <h2>{title}</h2>\n      <LatestPrice coin=\"ETH\" price={priceData} />\n      <button onClick={updateData}>Update Price</button>\n    </div>\n  );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}