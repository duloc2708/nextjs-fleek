{"ast":null,"code":"var _jsxFileName = \"/Users/tgreco/g-drive/fleek-apps/nextjs-fleek/src/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from \"react\";\nimport useInfura from \"../shared/hooks/useInfura\";\nimport LatestPrice from \"../features/EthereumData/component\";\nimport BigNumber from \"bignumber.js\";\nimport { ETHEREUM_ORACLE_ADDRESS, LINK_ORACLE_ADDRESS } from \"../shared/abis/ropsten.oracle\";\n\nconst fromDecimal = decimal => number => new BigNumber(number).shiftedBy(decimal);\n\nconst fromEth = fromDecimal(-18);\n\nconst formatNumber = x => new BigNumber(x).toFixed(2);\n\nconst getOracleData = oracle => () => {\n  oracle.methods.latestAnswer().call({}, (error, res) => {\n    if (error != null) {\n      console.log(error);\n      return;\n    }\n\n    console.log(\"Latest price was:\", res);\n    return BigNumber(res).shiftedBy(-8).toFixed(2);\n  });\n};\n\nconst Index = ({\n  title = \"NextJS IPFS Application\"\n}) => {\n  const {\n    oracle,\n    getLatestData\n  } = useInfura({\n    currentChain: process.env.INFURA_ROPSTEN,\n    oracleAddress: ETHEREUM_ORACLE_ADDRESS\n  });\n  const {\n    0: priceData,\n    1: setPriceData\n  } = useState(\"\");\n\n  const updateData = () => {\n    setPriceData(getLatestData());\n  };\n\n  console.log({\n    oracle\n  });\n  useEffect(() => {\n    updateData();\n  }, []);\n  console.log({\n    priceData\n  });\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, title), __jsx(LatestPrice, {\n    coin: \"ETH\",\n    price: priceData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), __jsx(\"button\", {\n    onClick: updateData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Update Price\"));\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/tgreco/g-drive/fleek-apps/nextjs-fleek/src/pages/index.js"],"names":["useEffect","useState","useInfura","LatestPrice","BigNumber","ETHEREUM_ORACLE_ADDRESS","LINK_ORACLE_ADDRESS","fromDecimal","decimal","number","shiftedBy","fromEth","formatNumber","x","toFixed","getOracleData","oracle","methods","latestAnswer","call","error","res","console","log","Index","title","getLatestData","currentChain","process","env","INFURA_ROPSTEN","oracleAddress","priceData","setPriceData","updateData"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SACEC,uBADF,EAEEC,mBAFF,QAGO,+BAHP;;AAIA,MAAMC,WAAW,GAAIC,OAAD,IAAcC,MAAD,IAC/B,IAAIL,SAAJ,CAAcK,MAAd,EAAsBC,SAAtB,CAAgCF,OAAhC,CADF;;AAEA,MAAMG,OAAO,GAAGJ,WAAW,CAAC,CAAC,EAAF,CAA3B;;AAEA,MAAMK,YAAY,GAAIC,CAAD,IAAO,IAAIT,SAAJ,CAAcS,CAAd,EAAiBC,OAAjB,CAAyB,CAAzB,CAA5B;;AAEA,MAAMC,aAAa,GAAIC,MAAD,IAAY,MAAM;AACtCA,EAAAA,MAAM,CAACC,OAAP,CAAeC,YAAf,GAA8BC,IAA9B,CAAmC,EAAnC,EAAuC,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACrD,QAAID,KAAK,IAAI,IAAb,EAAmB;AACjBE,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA;AACD;;AACDE,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,GAAjC;AACA,WAAOjB,SAAS,CAACiB,GAAD,CAAT,CAAeX,SAAf,CAAyB,CAAC,CAA1B,EAA6BI,OAA7B,CAAqC,CAArC,CAAP;AACD,GAPD;AAQD,CATD;;AAWA,MAAMU,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAK,GAAG;AAAV,CAAD,KAA2C;AACvD,QAAM;AAAET,IAAAA,MAAF;AAAUU,IAAAA;AAAV,MAA4BxB,SAAS,CAAC;AAC1CyB,IAAAA,YAAY,EAAEC,OAAO,CAACC,GAAR,CAAYC,cADgB;AAE1CC,IAAAA,aAAa,EAAE1B;AAF2B,GAAD,CAA3C;AAKA,QAAM;AAAA,OAAC2B,SAAD;AAAA,OAAYC;AAAZ,MAA4BhC,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMiC,UAAU,GAAG,MAAM;AACvBD,IAAAA,YAAY,CAACP,aAAa,EAAd,CAAZ;AACD,GAFD;;AAIAJ,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEP,IAAAA;AAAF,GAAZ;AACAhB,EAAAA,SAAS,CAAC,MAAM;AACdkC,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;AAIAZ,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAES,IAAAA;AAAF,GAAZ;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKP,KAAL,CADF,EAEE,MAAC,WAAD;AAAa,IAAA,IAAI,EAAC,KAAlB;AAAwB,IAAA,KAAK,EAAEO,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAQ,IAAA,OAAO,EAAEE,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,CADF;AAOD,CAzBD;;AA2BA,eAAeV,KAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport useInfura from \"../shared/hooks/useInfura\";\nimport LatestPrice from \"../features/EthereumData/component\";\nimport BigNumber from \"bignumber.js\";\nimport {\n  ETHEREUM_ORACLE_ADDRESS,\n  LINK_ORACLE_ADDRESS,\n} from \"../shared/abis/ropsten.oracle\";\nconst fromDecimal = (decimal) => (number) =>\n  new BigNumber(number).shiftedBy(decimal);\nconst fromEth = fromDecimal(-18);\n\nconst formatNumber = (x) => new BigNumber(x).toFixed(2);\n\nconst getOracleData = (oracle) => () => {\n  oracle.methods.latestAnswer().call({}, (error, res) => {\n    if (error != null) {\n      console.log(error);\n      return;\n    }\n    console.log(\"Latest price was:\", res);\n    return BigNumber(res).shiftedBy(-8).toFixed(2);\n  });\n};\n\nconst Index = ({ title = \"NextJS IPFS Application\" }) => {\n  const { oracle, getLatestData } = useInfura({\n    currentChain: process.env.INFURA_ROPSTEN,\n    oracleAddress: ETHEREUM_ORACLE_ADDRESS,\n  });\n\n  const [priceData, setPriceData] = useState(\"\");\n\n  const updateData = () => {\n    setPriceData(getLatestData());\n  };\n\n  console.log({ oracle });\n  useEffect(() => {\n    updateData();\n  }, []);\n\n  console.log({ priceData });\n  return (\n    <div>\n      <h2>{title}</h2>\n      <LatestPrice coin=\"ETH\" price={priceData} />\n      <button onClick={updateData}>Update Price</button>\n    </div>\n  );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}