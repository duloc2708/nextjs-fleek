{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from \"react\";\nimport useInfura from \"../shared/hooks/useInfura\";\nimport LatestPrice from \"../features/EthereumData/component\";\nimport BigNumber from \"bignumber.js\";\nimport { ETHEREUM_ORACLE_ADDRESS, LINK_ORACLE_ADDRESS } from \"../shared/abis/ropsten.oracle\";\n\nvar Index = function Index(_ref) {\n  var _ref$title = _ref.title,\n      title = _ref$title === void 0 ? \"NextJS IPFS Application\" : _ref$title;\n\n  var _useInfura = useInfura({\n    currentChain: process.env.INFURA_ROPSTEN,\n    oracleAddress: ETHEREUM_ORACLE_ADDRESS\n  }),\n      oracle = _useInfura.oracle;\n\n  var _useInfura2 = useInfura({\n    currentChain: process.env.INFURA_ROPSTEN,\n    oracleAddress: LINK_ORACLE_ADDRESS\n  }),\n      linkOracle = _useInfura2.oracle;\n\n  var _useState = useState(\"\"),\n      priceData = _useState[0],\n      setPriceData = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      linkPriceData = _useState2[0],\n      setLinkPriceData = _useState2[1];\n\n  var updateLink = function updateLink() {\n    linkOracle.methods.latestAnswer().call({}, function (error, res) {\n      if (error != null) {\n        console.log(error);\n        return;\n      }\n\n      console.log(\"Latest price was:\", res);\n      setLinkPriceData(new BigNumber(res).shiftedBy(-8).toFixed(2));\n    });\n  };\n\n  var updateData = function updateData() {\n    oracle.methods.latestAnswer().call({}, function (error, res) {\n      if (error != null) {\n        console.log(error);\n        return;\n      }\n\n      console.log(\"Latest price was:\", res);\n      setPriceData(new BigNumber(res).shiftedBy(-8).toFixed(2));\n    });\n  };\n\n  console.log({\n    oracle: oracle\n  });\n  useEffect(function () {\n    updateData();\n    updateLink();\n  }, []);\n  console.log({\n    priceData: priceData\n  });\n  return __jsx(\"div\", null, __jsx(\"h2\", null, title), __jsx(LatestPrice, {\n    coin: \"ETH\",\n    price: priceData\n  }), __jsx(\"button\", {\n    onClick: updateData\n  }, \"Update Price\"), __jsx(LatestPrice, {\n    coin: \"Link\",\n    price: linkPriceData\n  }), __jsx(\"button\", {\n    onClick: updateLink\n  }, \"Update LINK Price\"));\n};\n\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}